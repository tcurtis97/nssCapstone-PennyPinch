[{"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js":"1","C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js":"2","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js":"3","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js":"5","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js":"6","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js":"7","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js":"8","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js":"9","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js":"10","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js":"11","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js":"12","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js":"13","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js":"14","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js":"15","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js":"16","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js":"17","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js":"18"},{"size":612,"mtime":1611937440523,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":766,"mtime":1611939115863,"results":"22","hashOfConfig":"20"},{"size":1973,"mtime":1612199804738,"results":"23","hashOfConfig":"20"},{"size":2161,"mtime":1612196736020,"results":"24","hashOfConfig":"20"},{"size":582,"mtime":1611953431357,"results":"25","hashOfConfig":"20"},{"size":3130,"mtime":1611939507643,"results":"26","hashOfConfig":"20"},{"size":1362,"mtime":1611949267290,"results":"27","hashOfConfig":"20"},{"size":799,"mtime":1611955371422,"results":"28","hashOfConfig":"20"},{"size":371,"mtime":1611941326787,"results":"29","hashOfConfig":"20"},{"size":3357,"mtime":1612200707333,"results":"30","hashOfConfig":"20"},{"size":826,"mtime":1611952913993,"results":"31","hashOfConfig":"20"},{"size":399,"mtime":1611949928719,"results":"32","hashOfConfig":"20"},{"size":1682,"mtime":1611957338106,"results":"33","hashOfConfig":"20"},{"size":3269,"mtime":1612198874059,"results":"34","hashOfConfig":"20"},{"size":1072,"mtime":1611953818804,"results":"35","hashOfConfig":"20"},{"size":1210,"mtime":1612199503931,"results":"36","hashOfConfig":"20"},{"size":225,"mtime":1612201554015,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"n75sme",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js",[],["81","82"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js",["83"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js",["84"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/customers?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    return fetch(\"http://localhost:8088/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                        .then(res => res.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"Penny_user\", createdUser.id)\n                                history.push(\"/\")\n                            }\n                        })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n        \n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Penny Pinch</h1>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Sign in </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js",["85"],"import React, { useContext, useEffect } from \"react\"\r\nimport {BudgetContext } from \"./BudgetProvider\"\r\nimport {BudgetCard } from \"./Budget\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const BudgetList = () => {\r\n  // This state changes when `getAnimals()` is invoked below\r\n  const { budgets, getBudgets } = useContext(BudgetContext)\r\n\r\n  //useEffect - reach out to the world for something\r\n  useEffect(() => {\r\n    \r\n    getBudgets()\r\n\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n\r\n  return (\r\n    <div className=\"budgets\">\r\n      <button onClick={() => {history.push(\"/budgets/create\")}}>\r\n            Add Budget\r\n          </button>\r\n\r\n      {\r\n        budgets.map(budget => {\r\n          return <BudgetCard key={budget.id} budget={budget} />\r\n        })\r\n      }\r\n    </div>\r\n  )}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js",["86","87"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js",["88"],"import React, { useContext, useEffect } from \"react\"\r\nimport {IncomeContext } from \"./IncomeProvider\"\r\nimport {IncomeCard } from \"./Income\"\r\nimport \"./Income.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nexport const IncomeList = () => {\r\n  // This state changes when `getAnimals()` is invoked below\r\n  const { incomes, getIncomes } = useContext(IncomeContext)\r\n\r\n  //useEffect - reach out to the world for something\r\n  useEffect(() => {\r\n    \r\n    getIncomes()\r\n\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n\r\n  return (\r\n    <div className=\"incomes\">\r\n      <button onClick={() => {history.push(\"/incomes/create\")}}>\r\n            Add Income\r\n          </button>\r\n\r\n      {\r\n        incomes.map(income => {\r\n          return <IncomeCard key={income.id} income={income} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js",["89"],"import React, { useContext, useEffect, useState } from \"react\"\r\n\r\nimport { IncomeContext } from \"../income/IncomeProvider\"\r\nimport \"./Income.css\"\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport const IncomeForm = () => {\r\n    const { addIncome, getIncomeById, updateIncome, getIncomes } = useContext(IncomeContext)\r\n\r\n   \r\n\r\n    const [income, setIncomes] = useState({\r\n      name: \"\",\r\n      value: \"\",\r\n    });\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const history = useHistory();\r\n    const { incomeId } = useParams();\r\n    \r\n    const handleControlledInputChange = (event) => {\r\n      const newIncome = { ...income }\r\n      let selectedVal = event.target.value\r\n      if (event.target.id.includes(\"Id\")) {\r\n        selectedVal = parseInt(selectedVal)\r\n      }\r\n     \r\n      newIncome[event.target.id] = selectedVal\r\n      \r\n      setIncomes(newIncome)\r\n    }\r\n\r\n\r\n    const handleClickSaveIncome = () => {\r\n          \r\n      const name = income.name\r\n      const value = income.value\r\n      const user = localStorage.getItem(\"Penny_user\")\r\n\r\n      if (name === \"\" || value === 0) {\r\n        window.alert(\"Please enter a name and value\")\r\n      } else {\r\n      \r\n      setIsLoading(true);\r\n         \r\n          if (incomeId){\r\n            updateIncome({\r\n                id: income.id,\r\n                name: income.name,\r\n                value: income.value,\r\n                userId : user\r\n            })\r\n            .then(() => history.push(`/incomes/detail/${income.id}`))\r\n          }else {\r\n            //POST - add\r\n            addIncome({\r\n                name: income.name,\r\n                value : income.value,\r\n                userId : user\r\n            })\r\n            .then(() => history.push(\"/incomes\"))\r\n          }\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getIncomes().then(() => {\r\n            if (incomeId) {\r\n              getIncomeById(incomeId)\r\n              .then(income => {\r\n                  setIncomes(income)\r\n                  setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n        }, [])\r\n\r\n   \r\n\r\n    return (\r\n        <form className=\"incomeForm\">\r\n        <h2 className=\"incomeForm__title\">{incomeId ? \"Save Income\" : \"Add Income\"}</h2>\r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Income name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Income name\" value={income.name}/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"value\">Value:</label>\r\n                <input type=\"text\" id=\"value\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Income Value\" value={income.value}/>\r\n            </div>\r\n        </fieldset>\r\n        <button className=\"btn btn-primary\"\r\n        disabled={isLoading}\r\n        onClick={event => {\r\n          event.preventDefault() \r\n          handleClickSaveIncome()\r\n        }}>\r\n      {incomeId ? \"Save Income\" : \"Add Income\"}</button>\r\n      </form>\r\n    )\r\n      }","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js",["90"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { IncomeContext } from \"./IncomeProvider\"\r\nimport \"./Income.css\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport const IncomeDetail = () => {\r\n  const { getIncomeById, deleteIncome } = useContext(IncomeContext)\r\n\r\n\tconst [income, setIncomes] = useState({})\r\n\r\n\tconst {incomeId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  const incomeDelete = () => {\r\n    deleteIncome(income.id)\r\n      .then(() => {\r\n        history.push(\"/incomes\")\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", incomeId)\r\n    getIncomeById(incomeId)\r\n    .then((response) => {\r\n      setIncomes(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"income\">\r\n        <h3 className=\"income__name\">{income.name}</h3>\r\n        <div className=\"income__value\">{income.value}</div>\r\n        <button onClick={() => {\r\n    history.push(`/incomes/edit/${income.id}`)\r\n}}>Edit</button>\r\n        <button onClick={incomeDelete}>Delete Income</button>\r\n    </section>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js",["91"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { BudgetContext } from \"./BudgetProvider\"\r\n\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport const BudgetDetail = () => {\r\n  const { getBudgetById, deleteBudget } = useContext(BudgetContext)\r\n\r\n\tconst [budget, setBudgets] = useState({})\r\n\r\n\tconst {budgetId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  const budgetDelete = () => {\r\n    deleteBudget(budget.id)\r\n      .then(() => {\r\n        history.push(\"/budgets\")\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", budgetId)\r\n    getBudgetById(budgetId)\r\n    .then((response) => {\r\n      setBudgets(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"budget\">\r\n        <h3 className=\"budget__name\">{budget.name}</h3>\r\n        <div className=\"budget__date\">{budget.date}</div>\r\n        \r\n        <button onClick={() => {\r\n         history.push(`/budgets/edit/${budget.id}`)\r\n          }}>Edit</button>\r\n        \r\n        <button onClick={budgetDelete}>Delete Budget</button>\r\n        \r\n        <button onClick={() => {\r\n        history.push(`/budgets/view/${budget.id}`)\r\n          }}>View</button>\r\n\r\n    </section>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js",["92","93","94","95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":11,"nodeType":"105","messageId":"106","endLine":9,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":9,"column":11,"nodeType":"105","messageId":"106","endLine":9,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":15,"column":6,"nodeType":"110","endLine":15,"endColumn":8,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"113","line":84,"column":12,"nodeType":"110","endLine":84,"endColumn":14,"suggestions":"114"},{"ruleId":"108","severity":1,"message":"115","line":17,"column":6,"nodeType":"110","endLine":17,"endColumn":8,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"117","line":80,"column":12,"nodeType":"110","endLine":80,"endColumn":14,"suggestions":"118"},{"ruleId":"108","severity":1,"message":"119","line":29,"column":8,"nodeType":"110","endLine":29,"endColumn":10,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":29,"column":8,"nodeType":"110","endLine":29,"endColumn":10,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"124","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"125","line":1,"column":29,"nodeType":"105","messageId":"106","endLine":1,"endColumn":38},{"ruleId":"103","severity":1,"message":"126","line":1,"column":40,"nodeType":"105","messageId":"106","endLine":1,"endColumn":48},{"ruleId":"103","severity":1,"message":"127","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"128","line":2,"column":22,"nodeType":"105","messageId":"106","endLine":2,"endColumn":31},{"ruleId":"103","severity":1,"message":"129","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":23},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'verifyPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBudgets'. Either include it or remove the dependency array.","ArrayExpression",["132"],"'Picker' is defined but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', and 'getBudgets'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'getIncomeById', 'getIncomes', and 'incomeId'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'getIncomeById' and 'incomeId'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'budgetId' and 'getBudgetById'. Either include them or remove the dependency array.",["137"],"'React' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'BudgetContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [getBudgets]",{"range":"150","text":"151"},"Update the dependencies array to be: [budgetId, getBudgetById, getBudgets]",{"range":"152","text":"153"},"Update the dependencies array to be: [getIncomes]",{"range":"154","text":"155"},"Update the dependencies array to be: [getIncomeById, getIncomes, incomeId]",{"range":"156","text":"157"},"Update the dependencies array to be: [getIncomeById, incomeId]",{"range":"158","text":"159"},"Update the dependencies array to be: [budgetId, getBudgetById]",{"range":"160","text":"161"},[456,458],"[getBudgets]",[2210,2212],"[budgetId, getBudgetById, getBudgets]",[481,483],"[getIncomes]",[2160,2162],"[getIncomeById, getIncomes, incomeId]",[716,718],"[getIncomeById, incomeId]",[695,697],"[budgetId, getBudgetById]"]