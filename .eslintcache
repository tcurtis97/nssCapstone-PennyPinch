[{"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js":"1","C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js":"2","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js":"3","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js":"5","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js":"6","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js":"7","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js":"8","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js":"9","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js":"10","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js":"11","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js":"12","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js":"13","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js":"14","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js":"15","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js":"16","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js":"17","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js":"18","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Logout.js":"19","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseProvider.js":"20","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryProvider.js":"21","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryCard.js":"22","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseCard.js":"23","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseList.js":"24","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\counter\\Counter.js":"25","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseForm.js":"26"},{"size":674,"mtime":1613062238887,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":828,"mtime":1612990730029,"results":"30","hashOfConfig":"28"},{"size":2578,"mtime":1612990730029,"results":"31","hashOfConfig":"28"},{"size":2228,"mtime":1612990730030,"results":"32","hashOfConfig":"28"},{"size":1367,"mtime":1614030340089,"results":"33","hashOfConfig":"28"},{"size":3008,"mtime":1612990730031,"results":"34","hashOfConfig":"28"},{"size":1551,"mtime":1612990730034,"results":"35","hashOfConfig":"28"},{"size":2597,"mtime":1614028640169,"results":"36","hashOfConfig":"28"},{"size":999,"mtime":1613960651203,"results":"37","hashOfConfig":"28"},{"size":4906,"mtime":1613961894836,"results":"38","hashOfConfig":"28"},{"size":2572,"mtime":1614028728615,"results":"39","hashOfConfig":"28"},{"size":416,"mtime":1613958908097,"results":"40","hashOfConfig":"28"},{"size":1536,"mtime":1612990730041,"results":"41","hashOfConfig":"28"},{"size":4353,"mtime":1614025922754,"results":"42","hashOfConfig":"28"},{"size":1400,"mtime":1614029367188,"results":"43","hashOfConfig":"28"},{"size":1399,"mtime":1613962658082,"results":"44","hashOfConfig":"28"},{"size":6812,"mtime":1614028294129,"results":"45","hashOfConfig":"28"},{"size":306,"mtime":1612990730031,"results":"46","hashOfConfig":"28"},{"size":1616,"mtime":1612990730038,"results":"47","hashOfConfig":"28"},{"size":583,"mtime":1612990730036,"results":"48","hashOfConfig":"28"},{"size":423,"mtime":1613063410348,"results":"49","hashOfConfig":"28"},{"size":1327,"mtime":1613963281241,"results":"50","hashOfConfig":"28"},{"size":1423,"mtime":1613963552622,"results":"51","hashOfConfig":"28"},{"size":205,"mtime":1612990730036,"results":"52","hashOfConfig":"28"},{"size":5147,"mtime":1613962345685,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"n75sme",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js",[],["117","118"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js",["119"],"import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { BudgetList } from \"./budget/BudgetList\";\r\nimport { BudgetProvider } from \"./budget/BudgetProvider\";\r\nimport { BudgetDetail } from \"./budget/BudgetDetail\";\r\nimport { BudgetForm } from \"./budget/BudgetForm\";\r\nimport { BudgetView } from \"./budget/BudgetView\";\r\nimport { ExpenseProvider } from \"./expenses/ExpenseProvider\";\r\nimport { IncomeList } from \"./income/IncomeList\";\r\nimport { IncomeProvider } from \"./income/IncomeProvider\";\r\nimport { IncomeDetail } from \"./income/IncomeDetail\";\r\nimport { IncomeForm } from \"./income/IncomeForm\";\r\nimport { CategoryProvider } from \"./categories/CategoryProvider\";\r\nimport { ExpenseForm } from \"./expenses/ExpenseForm\";\r\nimport { ExpenseList } from \"./expenses/ExpenseList\";\r\n\r\nexport const ApplicationViews = () => {\r\n  return (\r\n    <>\r\n      <BudgetProvider>\r\n        <ExpenseProvider>\r\n          <CategoryProvider>\r\n            <IncomeProvider>\r\n              <Route exact path=\"/budget\">\r\n                <BudgetList />\r\n              </Route>\r\n\r\n              <Route exact path=\"/budget/create\">\r\n                <BudgetForm />\r\n              </Route>\r\n\r\n              <Route exact path=\"/budget/edit/:budgetId(\\d+)\">\r\n                <BudgetForm />\r\n              </Route>\r\n\r\n              <Route exact path=\"/budget/detail/:budgetId(\\d+)\">\r\n                <BudgetDetail />\r\n              </Route>\r\n\r\n              <Route exact path=\"/budget/view/:budgetId(\\d+)\">\r\n                <BudgetView />\r\n              </Route>\r\n\r\n              <Route exact path=\"/expenses/create/:budgetId(\\d+)\">\r\n                <ExpenseForm />\r\n              </Route>\r\n\r\n              <Route exact path=\"/category/detail/:categoryId(\\d+)\">\r\n                <ExpenseList />\r\n              </Route>\r\n\r\n              <Route exact path=\"/expenses/edit/:expenseId(\\d+)/:budgetId(\\d+)\">\r\n                <ExpenseForm />\r\n              </Route>\r\n            </IncomeProvider>\r\n          </CategoryProvider>\r\n        </ExpenseProvider>\r\n      </BudgetProvider>\r\n\r\n      <IncomeProvider>\r\n        <Route exact path=\"/incomes\">\r\n          <IncomeList />\r\n        </Route>\r\n        <Route exact path=\"/incomes/create\">\r\n          <IncomeForm />\r\n        </Route>\r\n        <Route exact path=\"/incomes/edit/:incomeId(\\d+)\">\r\n          <IncomeForm />\r\n        </Route>\r\n      </IncomeProvider>\r\n\r\n      <IncomeProvider>\r\n        <Route exact path=\"/incomes/detail/:incomeId(\\d+)\">\r\n          <IncomeDetail />\r\n        </Route>\r\n      </IncomeProvider>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js",["120"],"import React, { useRef } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\n\r\nexport const Login = props => {\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const existDialog = useRef()\r\n    const history = useHistory()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    localStorage.setItem(\"Penny_user\", exists.id)\r\n                    history.push(\"/budget\") \r\n                } else {\r\n                    existDialog.current.showModal()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <section>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h1>Penny Pinch</h1>\r\n                    <h2>Please sign in</h2>\r\n                    <fieldset>\r\n                        <label htmlFor=\"inputEmail\"> Email address </label>\r\n                        <input ref={email} type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n            <section className=\"link--register\">\r\n                <Link to=\"/register\">Not a member yet?</Link>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js",["121","122"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js",["123"],"import React, { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nexport const Register = (props) => {\r\n  const firstName = useRef();\r\n  const lastName = useRef();\r\n  const email = useRef();\r\n  const verifyPassword = useRef();\r\n  const conflictDialog = useRef();\r\n  const history = useHistory();\r\n\r\n  const existingUserCheck = () => {\r\n    return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n      .then((res) => res.json())\r\n      .then((user) => !!user.length);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    existingUserCheck().then((userExists) => {\r\n      if (!userExists) {\r\n        return fetch(\"http://localhost:8088/users\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: email.current.value,\r\n            name: `${firstName.current.value} ${lastName.current.value}`,\r\n          }),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((createdUser) => {\r\n            if (createdUser.hasOwnProperty(\"id\")) {\r\n              localStorage.setItem(\"Penny_user\", createdUser.id);\r\n              history.push(\"/\");\r\n            }\r\n          });\r\n      } else {\r\n        conflictDialog.current.showModal();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main style={{ textAlign: \"center\" }}>\r\n      <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n        <div>Account with that email address already exists</div>\r\n        <button\r\n          className=\"button--close\"\r\n          onClick={(e) => conflictDialog.current.close()}\r\n        >\r\n          Close\r\n        </button>\r\n      </dialog>\r\n\r\n      <form className=\"form--login\" onSubmit={handleRegister}>\r\n        <h1 className=\"h3 mb-3 font-weight-normal\">\r\n          Please Register for Penny Pinch\r\n        </h1>\r\n        <fieldset>\r\n          <label htmlFor=\"firstName\"> First Name </label>\r\n          <input\r\n            ref={firstName}\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            className=\"form-control\"\r\n            placeholder=\"First name\"\r\n            required\r\n            autoFocus\r\n          />\r\n        </fieldset>\r\n        <fieldset>\r\n          <label htmlFor=\"lastName\"> Last Name </label>\r\n          <input\r\n            ref={lastName}\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            className=\"form-control\"\r\n            placeholder=\"Last name\"\r\n            required\r\n          />\r\n        </fieldset>\r\n        <fieldset>\r\n          <label htmlFor=\"inputEmail\"> Email address </label>\r\n          <input\r\n            ref={email}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Email address\"\r\n            required\r\n          />\r\n        </fieldset>\r\n        <fieldset>\r\n          <button type=\"submit\"> Sign in </button>\r\n        </fieldset>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js",["124"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js",["125"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Budget.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const BudgetCard = ({ budget }) => (\r\n\r\n  <section className=\"budget\">\r\n    <h3 className=\"budget__name\">\r\n      <Link to={`/budget/detail/${budget.id}`} style={{ textDecoration: 'none', color: 'black' }}>{budget.name}</Link>\r\n    </h3>\r\n    <div className=\"budget__date\">{budget.date}, {budget.year}</div>\r\n    \r\n    {/* <Button variant=\"primary\" className=\"view\"\r\n        onClick={() => {\r\n          history.push(`/budget/view/${budget.id}`);\r\n        }}\r\n      >\r\n        View\r\n      </Button> */}\r\n\r\n\r\n    <Button className=\"btn-primary\" variant=\"secondary\"  style={{color:\"#FBF5F3\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} >\r\n      {\" \"}\r\n      <Link to={`/budget/view/${budget.id}`}  style={{ textDecoration: 'none', color: 'black' }}>View</Link>{\" \"}\r\n    </Button>\r\n  </section>\r\n);\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js",["126"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Budget.css\";\r\nimport { BudgetContext } from \"../budget/BudgetProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const BudgetForm = () => {\r\n  const { addBudget, getBudgetById, updateBudget, getBudgets } = useContext(\r\n    BudgetContext\r\n  );\r\n\r\n  const [budget, setBudgets] = useState({\r\n    name: \"\",\r\n    date: \"\",\r\n    year: \"\"\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n  const { budgetId } = useParams();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    let newBudget = { ...budget };\r\n    let selectedVal = event.target.value;\r\n    newBudget[event.target.id] = selectedVal;\r\n\r\n    setBudgets(newBudget);\r\n  };\r\n\r\n  const handleClickSaveBudget = () => {\r\n    const name = budget.name;\r\n    const date= budget.month;\r\n    const user = localStorage.getItem(\"Penny_user\");\r\n    const year = new Date().getFullYear()\r\n    const nonChangeableYear = budget.year\r\n\r\n    if (name === \"\" || date === \"\") {\r\n      window.alert(\"Please enter a name and date\");\r\n    } else {\r\n      setIsLoading(true);\r\n\r\n      if (budgetId) {\r\n        updateBudget({\r\n          id: budget.id,\r\n          name: budget.name,\r\n          date: date,\r\n          year: nonChangeableYear,\r\n          userId: parseInt(user),\r\n        }).then(() => history.push(\"/budget\"));\r\n      } else {\r\n        addBudget({\r\n          name: budget.name,\r\n          date: date,\r\n          year: year,\r\n          userId: parseInt(user),\r\n        }).then(() => history.push(\"/budget\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBudgets().then(() => {\r\n      if (budgetId) {\r\n        getBudgetById(budgetId).then((budget) => {\r\n          setBudgets(budget);\r\n          setIsLoading(false);\r\n        });\r\n      } else {\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n\r\n const monthMap = [\r\n  { id: 1, month: \"January\" },\r\n  { id: 2, month: \"February\" },\r\n  { id: 3, month: \"March\" },\r\n  { id: 4, month: \"April\" },\r\n  { id: 5, month: \"May\" },\r\n  { id: 6, month: \"June\" },\r\n  { id: 7, month: \"July\" },\r\n  { id: 8, month: \"August\" },\r\n  { id: 9, month: \"September\" },\r\n  { id: 10, month: \"October\" },\r\n  { id: 11, month: \"November\" },\r\n  { id: 12, month: \"December\" },\r\n]; \r\n\r\n  \r\n  return (\r\n    <form className=\"budgetForm\">\r\n      <h2 className=\"budgetForm__title\">\r\n        {budgetId ? \"Save Budget\" : \"Add Budget\"}\r\n      </h2>\r\n\r\n      <Button\r\n        variant\r\n        className=\"back_button\"\r\n        onClick={() => {\r\n          history.goBack();\r\n        }}\r\n      >\r\n        <svg\r\n          width=\"48\"\r\n          height=\"48\"\r\n          viewBox=\"0 0 48 48\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z\"\r\n            fill=\"#E28413\"\r\n          />\r\n          <path\r\n            d=\"M31 24H17\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M24 31L17 24L24 17\"\r\n            stroke=\"white\"\r\n            stroke-width=\"2\"\r\n            stroke-linecap=\"round\"\r\n            stroke-linejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </Button>\r\n\r\n<div className=\"form_background\">\r\n      <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Budget name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={handleControlledInputChange}\r\n            required\r\n            autoFocus\r\n            className=\"form-control\"\r\n            placeholder=\"Budget name\"\r\n            value={budget.name}\r\n            />\r\n        </div>\r\n      </fieldset>\r\n\r\n       <fieldset>\r\n         <div className=\"form-group\">\r\n           <label htmlFor=\"category\">Assign to Date: </label>\r\n           <select\r\n            value={budget.month}\r\n            id=\"month\"\r\n            className=\"form-control\"\r\n            onChange={handleControlledInputChange}\r\n            >\r\n            <option value=\"0\">Select a Date</option>\r\n\r\n            {monthMap.map((m) => (\r\n              <option key={m.id} value={m.month}>\r\n                {m.month}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset> \r\n\r\n  \r\n\r\n      <Button variant=\"secondary\" style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} \r\n        className=\"add_button\"\r\n        disabled={isLoading}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClickSaveBudget();\r\n        }}\r\n        >\r\n        {budgetId ? \"Save Budget\" : \"Add Budget\"}\r\n      </Button>\r\n\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js",["127"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js",["128"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js",["129"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js",["130"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BudgetContext } from \"./BudgetProvider\";\r\nimport \"./Budget.css\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const BudgetDetail = () => {\r\n  const { getBudgetById, deleteBudget } = useContext(BudgetContext);\r\n\r\n  const [budget, setBudgets] = useState({});\r\n\r\n  const { budgetId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const budgetDelete = () => {\r\n    deleteBudget(budget.id).then(() => {\r\n      history.push(\"/budget\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", budgetId);\r\n    getBudgetById(budgetId).then((response) => {\r\n      setBudgets(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"budget_detail\">\r\n      <h3 className=\"budget__name\">{budget.name}</h3>\r\n      <div className=\"budget__date\">{budget.date}</div>\r\n\r\n      <Button variant=\"secondary\" style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} className=\"btn-primary\"\r\n        onClick={() => {\r\n          history.push(`/budget/edit/${budget.id}`);\r\n        }}\r\n      >\r\n        Edit\r\n      </Button>\r\n\r\n      <Button onClick={budgetDelete} variant=\"secondary\" style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} className=\"btn-primary\">Delete Budget</Button>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js",["131","132","133","134","135","136"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Logout.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryCard.js",["137","138"],"import React from \"react\";\r\nimport { ExpenseContext } from \"../expenses/ExpenseProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Category.css\";\r\n\r\nexport const CategoryCard = ({ category, total }) => {\r\n  return (\r\n\r\n  <section className=\"category\">\r\n    <h3 className=\"category_name\">\r\n      {category.name}\r\n    </h3>\r\n\r\n    <div className=\"total_expense\">\r\n    ${total}\r\n    </div>\r\n\r\n  </section>\r\n  )};\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseCard.js",["139","140"],"import React, { useContext, useParams, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { ExpenseContext } from \"./ExpenseProvider\"\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"./Expense.css\";\r\n\r\nexport const ExpenseCard = ({ expense, category, budgetParam}) => {\r\n  const { deleteExpense } = useContext(ExpenseContext)  \r\n  \r\n  \r\n\tconst history = useHistory();\r\n\r\n  const expenseDelete = () => {\r\n    deleteExpense(expense.id)\r\n      .then(() => {\r\n        history.go(0)\r\n      })\r\n  }\r\n\r\n  \r\n\r\n   return (\r\n    <section className=\"expense\">\r\n      <h5 className=\"categoryName\">\r\n        {category.name}\r\n      </h5>\r\n        <h3 className=\"expense_total\">\r\n        {expense.name}       \r\n      </h3>\r\n      <div className=\"expense_value\">\r\n        ${expense.value}\r\n      </div>\r\n\r\n      <Button variant=\"secondary\" style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} className=\"btn-primary\"> <Link to={`/expenses/edit/${expense.id}/${budgetParam}`} style={{ textDecoration: 'none', color: 'black' }}>Edit</Link> </Button>\r\n      <Button variant=\"secondary\" onClick={expenseDelete} style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}} className=\"btn-primary\">Delete Expense</Button>\r\n    </section>\r\n)}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseList.js",["141","142","143","144","145"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ExpenseContext } from \"./ExpenseProvider\";\r\nimport { CategoryContext } from \"../categories/CategoryProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { ExpenseCard } from \"./ExpenseCard\";\r\nimport { BudgetContext } from \"../budget/BudgetProvider\";\r\nimport \"./Expense.css\";\r\n\r\nexport const ExpenseList = ({ selectedCategory }) => {\r\n  const { expenses, getExpenses } = useContext(ExpenseContext);\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n  const { getBudgetById } = useContext(BudgetContext);\r\n\r\n  const history = useHistory();\r\n  const { budgetId } = useParams();\r\n\r\n  const [budget, setBudget] = useState({});\r\n\r\n  let thing = budget.expenses?.filter(\r\n    (e) => e.categoryId == selectedCategory.id\r\n  );\r\n  console.log(thing);\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n      .then(getExpenses)\r\n      .then(() => {\r\n        if (budgetId) {\r\n          getBudgetById(budgetId).then((budget) => {\r\n            setBudget(budget);\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"expenseList\">\r\n      {thing?.map((e) => {\r\n        return (\r\n          <ExpenseCard\r\n            key={e.id}\r\n            expense={e}\r\n            category={selectedCategory}\r\n            budgetParam={budgetId}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\counter\\Counter.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseForm.js",["146"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ExpenseContext } from \"../expenses/ExpenseProvider\";\r\nimport { CategoryContext } from \"../categories/CategoryProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport \"./Expense.css\";\r\n\r\nexport const ExpenseForm = () => {\r\n  const { addExpense, getExpenseById, updateExpense, getExpenses } = useContext(\r\n    ExpenseContext\r\n  );\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  const [expense, setExpenses] = useState({\r\n    name: \"\",\r\n    date: \"\",\r\n    categoryId: 0,\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const history = useHistory();\r\n  const { expenseId } = useParams();\r\n  const { budgetId } = useParams();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newExpense = { ...expense };\r\n    let selectedVal = event.target.value;\r\n    if (event.target.id.includes(\"Id\")) {\r\n      selectedVal = parseInt(selectedVal);\r\n    }\r\n\r\n    newExpense[event.target.id] = selectedVal;\r\n\r\n    setExpenses(newExpense);\r\n  };\r\n\r\n  const handleClickSaveExpense = () => {\r\n    const user = localStorage.getItem(\"Penny_user\");\r\n\r\n    if (\r\n      expense.name === \"\" ||\r\n      expense.value === \"\" ||\r\n      expense.categoryId === 0\r\n    ) {\r\n      window.alert(\"Please enter a name and value and choose a category\");\r\n    } else {\r\n      setIsLoading(true);\r\n\r\n      if (expenseId) {\r\n        updateExpense({\r\n          id: expense.id,\r\n          name: expense.name,\r\n          value: parseInt(expense.value),\r\n          categoryId: expense.categoryId,\r\n          budgetId: parseInt(budgetId),\r\n          userId: parseInt(user),\r\n        }).then(() => history.push(`/budget/view/${budgetId}`));\r\n      } else {\r\n        addExpense({\r\n          name: expense.name,\r\n          value: parseInt(expense.value),\r\n          categoryId: expense.categoryId,\r\n          budgetId: parseInt(budgetId),\r\n          userId: parseInt(user),\r\n        }).then(() => history.push(`/budget/view/${budgetId}`));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExpenses()\r\n      .then(getCategories)\r\n      .then(() => {\r\n        if (expenseId) {\r\n          getExpenseById(expenseId).then((expense) => {\r\n            setExpenses(expense);\r\n            setIsLoading(false);\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <form className=\"expenseForm\">\r\n      <h2 className=\"expenseForm__title\">\r\n        {expenseId ? \"Save Expense\" : \"Add Expense\"}\r\n      </h2>\r\n\r\n      \r\n      <Button variant\r\n        className=\"back_button\"\r\n        onClick={() => {\r\n          history.goBack()\r\n        }}>\r\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24Z\" fill=\"#E28413\"/>\r\n<path d=\"M31 24H17\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n<path d=\"M24 31L17 24L24 17\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>\r\n\r\n        </Button>\r\n      \r\n\r\n        <div className=\"form_background\">\r\n      <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Expense name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={handleControlledInputChange}\r\n            required\r\n            autoFocus\r\n            className=\"form-control\"\r\n            placeholder=\"Expense name\"\r\n            value={expense.name}\r\n          />\r\n        </div>\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"value\">Value:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"value\"\r\n            onChange={handleControlledInputChange}\r\n            required\r\n            autoFocus\r\n            className=\"form-control\"\r\n            placeholder=\"Expense Value\"\r\n            value={expense.value}\r\n          />\r\n        </div>\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Assign to Category: </label>\r\n          <select\r\n            value={expense.categoryId}\r\n            id=\"categoryId\"\r\n            className=\"form-control\"\r\n            onChange={handleControlledInputChange}\r\n          >\r\n            <option value=\"0\">Select a Category</option>\r\n            {categories.map((c) => (\r\n              <option key={c.id} value={c.id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n\r\n      <Button variant=\"secondary\" style={{color:\"black\", boxShadow: \"5px 5px 3px rgba(46, 46, 46, 0.62)\"}}\r\n        className=\"add_button\"\r\n        disabled={isLoading}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          handleClickSaveExpense();\r\n        }}\r\n      >\r\n        {expenseId ? \"Save Expense\" : \"Add Expense\"}\r\n      </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":23},{"ruleId":"151","severity":1,"message":"155","line":9,"column":11,"nodeType":"153","messageId":"154","endLine":9,"endColumn":19},{"ruleId":"151","severity":1,"message":"156","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"157","line":6,"column":18,"nodeType":"153","messageId":"154","endLine":6,"endColumn":25},{"ruleId":"151","severity":1,"message":"158","line":9,"column":9,"nodeType":"153","messageId":"154","endLine":9,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":14,"column":6,"nodeType":"161","endLine":14,"endColumn":8,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":73,"column":6,"nodeType":"161","endLine":73,"endColumn":8,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"166","line":14,"column":6,"nodeType":"161","endLine":14,"endColumn":8,"suggestions":"167"},{"ruleId":"159","severity":1,"message":"168","line":73,"column":6,"nodeType":"161","endLine":73,"endColumn":8,"suggestions":"169"},{"ruleId":"159","severity":1,"message":"170","line":26,"column":6,"nodeType":"161","endLine":26,"endColumn":8,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"172","line":26,"column":6,"nodeType":"161","endLine":26,"endColumn":8,"suggestions":"173"},{"ruleId":"151","severity":1,"message":"174","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":14},{"ruleId":"151","severity":1,"message":"175","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":13},{"ruleId":"151","severity":1,"message":"176","line":18,"column":11,"nodeType":"153","messageId":"154","endLine":18,"endColumn":19},{"ruleId":"159","severity":1,"message":"177","line":50,"column":6,"nodeType":"161","endLine":50,"endColumn":8,"suggestions":"178"},{"ruleId":"151","severity":1,"message":"179","line":65,"column":9,"nodeType":"153","messageId":"154","endLine":65,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":159,"column":28,"nodeType":"182","messageId":"183","endLine":159,"endColumn":30},{"ruleId":"151","severity":1,"message":"184","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":24},{"ruleId":"151","severity":1,"message":"156","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"185","line":1,"column":29,"nodeType":"153","messageId":"154","endLine":1,"endColumn":38},{"ruleId":"151","severity":1,"message":"186","line":1,"column":40,"nodeType":"153","messageId":"154","endLine":1,"endColumn":49},{"ruleId":"151","severity":1,"message":"176","line":10,"column":11,"nodeType":"153","messageId":"154","endLine":10,"endColumn":19},{"ruleId":"151","severity":1,"message":"187","line":11,"column":11,"nodeType":"153","messageId":"154","endLine":11,"endColumn":21},{"ruleId":"151","severity":1,"message":"179","line":14,"column":9,"nodeType":"153","messageId":"154","endLine":14,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":20,"column":25,"nodeType":"182","messageId":"183","endLine":20,"endColumn":27},{"ruleId":"159","severity":1,"message":"188","line":34,"column":6,"nodeType":"161","endLine":34,"endColumn":8,"suggestions":"189"},{"ruleId":"159","severity":1,"message":"190","line":84,"column":6,"nodeType":"161","endLine":84,"endColumn":8,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'Link' is defined but never used.","'NavItem' is defined but never used.","'verifyPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBudgets'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', and 'getBudgets'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'getIncomeById', 'getIncomes', and 'incomeId'. Either include them or remove the dependency array.",["197"],"React Hook useEffect has missing dependencies: 'getIncomeById' and 'incomeId'. Either include them or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'budgetId' and 'getBudgetById'. Either include them or remove the dependency array.",["199"],"'Form' is defined but never used.","'Chart' is defined but never used.","'expenses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', 'getCategories', 'getExpenses', and 'getIncomes'. Either include them or remove the dependency array.",["200"],"'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ExpenseContext' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'categories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', 'getCategories', and 'getExpenses'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'expenseId', 'getCategories', 'getExpenseById', and 'getExpenses'. Either include them or remove the dependency array.",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [getBudgets]",{"range":"221","text":"222"},"Update the dependencies array to be: [budgetId, getBudgetById, getBudgets]",{"range":"223","text":"224"},"Update the dependencies array to be: [getIncomes]",{"range":"225","text":"226"},"Update the dependencies array to be: [getIncomeById, getIncomes, incomeId]",{"range":"227","text":"228"},"Update the dependencies array to be: [getIncomeById, incomeId]",{"range":"229","text":"230"},"Update the dependencies array to be: [budgetId, getBudgetById]",{"range":"231","text":"232"},"Update the dependencies array to be: [budgetId, getBudgetById, getCategories, getExpenses, getIncomes]",{"range":"233","text":"234"},"Update the dependencies array to be: [budgetId, getBudgetById, getCategories, getExpenses]",{"range":"235","text":"236"},"Update the dependencies array to be: [expenseId, getCategories, getExpenseById, getExpenses]",{"range":"237","text":"238"},[468,470],"[getBudgets]",[1953,1955],"[budgetId, getBudgetById, getBudgets]",[469,471],"[getIncomes]",[1958,1960],"[getIncomeById, getIncomes, incomeId]",[755,757],"[getIncomeById, incomeId]",[754,756],"[budgetId, getBudgetById]",[1870,1872],"[budgetId, getBudgetById, getCategories, getExpenses, getIncomes]",[1105,1107],"[budgetId, getBudgetById, getCategories, getExpenses]",[2449,2451],"[expenseId, getCategories, getExpenseById, getExpenses]"]