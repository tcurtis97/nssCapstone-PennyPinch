[{"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js":"1","C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js":"2","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js":"3","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js":"5","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js":"6","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js":"7","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js":"8","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js":"9","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js":"10","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js":"11","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js":"12","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js":"13","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js":"14","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js":"15","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js":"16","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js":"17","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js":"18","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Logout.js":"19","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseProvider.js":"20","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryProvider.js":"21","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryCard.js":"22","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseCard.js":"23","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseList.js":"24","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\counter\\Counter.js":"25","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseForm.js":"26"},{"size":612,"mtime":1611937440523,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":828,"mtime":1612545994457,"results":"30","hashOfConfig":"28"},{"size":2584,"mtime":1612963402844,"results":"31","hashOfConfig":"28"},{"size":2163,"mtime":1612969742569,"results":"32","hashOfConfig":"28"},{"size":692,"mtime":1612893075697,"results":"33","hashOfConfig":"28"},{"size":3126,"mtime":1612302932995,"results":"34","hashOfConfig":"28"},{"size":1652,"mtime":1612969487316,"results":"35","hashOfConfig":"28"},{"size":749,"mtime":1612963613103,"results":"36","hashOfConfig":"28"},{"size":566,"mtime":1612830391061,"results":"37","hashOfConfig":"28"},{"size":3767,"mtime":1612902560225,"results":"38","hashOfConfig":"28"},{"size":718,"mtime":1612366370646,"results":"39","hashOfConfig":"28"},{"size":400,"mtime":1612963724660,"results":"40","hashOfConfig":"28"},{"size":1636,"mtime":1612969557203,"results":"41","hashOfConfig":"28"},{"size":3289,"mtime":1612545305543,"results":"42","hashOfConfig":"28"},{"size":1072,"mtime":1611953818804,"results":"43","hashOfConfig":"28"},{"size":1115,"mtime":1612830527746,"results":"44","hashOfConfig":"28"},{"size":7554,"mtime":1612968344044,"results":"45","hashOfConfig":"28"},{"size":324,"mtime":1612208908751,"results":"46","hashOfConfig":"28"},{"size":1701,"mtime":1612969654299,"results":"47","hashOfConfig":"28"},{"size":583,"mtime":1612385377079,"results":"48","hashOfConfig":"28"},{"size":397,"mtime":1612963740670,"results":"49","hashOfConfig":"28"},{"size":993,"mtime":1612963750292,"results":"50","hashOfConfig":"28"},{"size":1354,"mtime":1612900274003,"results":"51","hashOfConfig":"28"},{"size":205,"mtime":1612798486395,"results":"52","hashOfConfig":"28"},{"size":4315,"mtime":1612829652092,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"n75sme",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},"C:\\Users\\Tim\\workspace\\pennypinch\\src\\index.js",[],["116","117"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\reportWebVitals.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\PennyPinch.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\ApplicationViews.js",["118"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Login.js",["119"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Register.js",["120"],"import React, { useRef } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const verifyPassword = useRef()\n    const conflictDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n\n        existingUserCheck()\n            .then((userExists) => {\n                if (!userExists) {\n                    return fetch(\"http://localhost:8088/users\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                        .then(res => res.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"Penny_user\", createdUser.id)\n                                history.push(\"/\")\n                            }\n                        })\n                }\n                else {\n                    conflictDialog.current.showModal()\n                }\n            })\n        \n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\n                <div>Account with that email address already exists</div>\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Penny Pinch</h1>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Sign in </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetList.js",["121"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\Budget.js",["122"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./Budget.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const BudgetCard = ({budget}) => (\r\n    <section className=\"budget\">\r\n        <h3 className=\"budget__name\">\r\n        <Link to={`/budget/detail/${budget.id}`}>\r\n          { budget.name }\r\n        </Link>\r\n      </h3>\r\n        <div className=\"budget__date\">{budget.date}</div>\r\n        \r\n        \r\n        \r\n        <button className='view'> <Link to={`/budget/view/${budget.id}`}>View</Link> </button>\r\n    </section>\r\n)","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetForm.js",["123","124"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport \"./Budget.css\"\r\nimport { BudgetContext } from \"../budget/BudgetProvider\"\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Picker from 'react-month-picker'\r\n\r\n\r\nexport const BudgetForm = () => {\r\n    const { addBudget, getBudgetById, updateBudget, getBudgets } = useContext(BudgetContext)\r\n\r\n   \r\n\r\n    const [budget, setBudgets] = useState({\r\n      name: \"\",\r\n      date: \"\",\r\n    });\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const history = useHistory();\r\n    const { budgetId } = useParams();\r\n    \r\n    const handleControlledInputChange = (event) => {\r\n      let newBudget = { ...budget }\r\n      let selectedVal = event.target.value\r\n      newBudget[event.target.id] = selectedVal\r\n      \r\n      setBudgets(newBudget)\r\n    }\r\n\r\n\r\n    const handleClickSaveBudget = () => {\r\n          \r\n      const name= budget.name\r\n      const date= budget.month\r\n      const user = localStorage.getItem(\"Penny_user\")\r\n      \r\n      if (name === \"\" || date === \"\") {\r\n        window.alert(\"Please enter a name and date\")\r\n      } else {\r\n\r\n      setIsLoading(true);\r\n         \r\n          if (budgetId){\r\n           \r\n            updateBudget({\r\n                id: budget.id,\r\n                name: budget.name,\r\n                date: date,\r\n                userId : parseInt(user)\r\n            })\r\n            .then(() => history.push(`/budget/detail/${budget.id}`))\r\n          }else {\r\n            \r\n            addBudget({\r\n                name: budget.name,\r\n                date : date,\r\n                userId : parseInt(user)\r\n            })\r\n            .then(() => history.push(\"/budget\"))\r\n          }\r\n        }\r\n      }\r\n      \r\n    \r\n    useEffect(() => {\r\n        getBudgets().then(() => {\r\n            if (budgetId) {\r\n              getBudgetById(budgetId)\r\n              .then(budget => {\r\n                  setBudgets(budget)\r\n                  setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n        }, [])\r\n\r\n      const monthMap = [{id: 1, month: 'January'}, {id: 2, month: 'February'},{id: 3, month: 'March'},{id: 4, month: 'April'},{id: 5, month: 'May'},{id: 6, month: 'June'},{id: 7, month: 'July'},{id: 8, month: 'August'},{id: 9, month: 'September'},{id: 10, month: 'October'},{id: 11, month: 'November'},{id: 12, month: 'December'}];\r\n\r\n    return (\r\n        <form className=\"budgetForm\">\r\n        <h2 className=\"budgetForm__title\">{budgetId ? \"Save Budget\" : \"Add Budget\"}</h2>\r\n        \r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Budget name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Budget name\" value={budget.name}/>\r\n            </div>\r\n        </fieldset>\r\n\r\n        \r\n        <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Assign to Date: </label>\r\n          <select value={budget.month} id=\"month\" className=\"form-control\" onChange={handleControlledInputChange}>\r\n            <option value=\"0\" >Select a Date</option>\r\n            \r\n            {monthMap.map(m => (\r\n              <option key={m.id} value={m.month}>\r\n                {m.month}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n\r\n        <button className=\"btn btn-primary\"\r\n        disabled={isLoading}\r\n        onClick={event => {\r\n          event.preventDefault() \r\n          handleClickSaveBudget()\r\n        }}>\r\n      {budgetId ? \"Save Budget\" : \"Add Budget\"}</button>\r\n      </form>\r\n    )\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeList.js",["125"],"import React, { useContext, useEffect } from \"react\"\r\nimport {IncomeContext } from \"./IncomeProvider\"\r\nimport {IncomeCard } from \"./Income\"\r\nimport \"./Income.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nexport const IncomeList = () => {\r\n  \r\n  const { incomes, getIncomes } = useContext(IncomeContext)\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    getIncomes()\r\n\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n\r\n  return (\r\n    <div className=\"incomes\">\r\n      <button onClick={() => {history.push(\"/incomes/create\")}}>\r\n            Add Income\r\n          </button>\r\n\r\n      {\r\n        incomes.map(income => {\r\n          return <IncomeCard key={income.id} income={income} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\Income.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeForm.js",["126"],"import React, { useContext, useEffect, useState } from \"react\"\r\n\r\nimport { IncomeContext } from \"../income/IncomeProvider\"\r\nimport \"./Income.css\"\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport const IncomeForm = () => {\r\n    const { addIncome, getIncomeById, updateIncome, getIncomes } = useContext(IncomeContext)\r\n\r\n   \r\n\r\n    const [income, setIncomes] = useState({\r\n      name: \"\",\r\n      value: \"\",\r\n    });\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const history = useHistory();\r\n    const { incomeId } = useParams();\r\n    \r\n    const handleControlledInputChange = (event) => {\r\n      const newIncome = { ...income }\r\n      let selectedVal = event.target.value\r\n      if (event.target.id.includes(\"Id\")) {\r\n        selectedVal = parseInt(selectedVal)\r\n      }\r\n     \r\n      newIncome[event.target.id] = selectedVal\r\n      \r\n      setIncomes(newIncome)\r\n    }\r\n\r\n\r\n    const handleClickSaveIncome = () => {\r\n          \r\n      const name = income.name\r\n      const value = income.value\r\n      const user = localStorage.getItem(\"Penny_user\")\r\n\r\n      if (name === \"\" || value === 0) {\r\n        window.alert(\"Please enter a name and value\")\r\n      } else {\r\n      \r\n      setIsLoading(true);\r\n         \r\n          if (incomeId){\r\n            updateIncome({\r\n                id: income.id,\r\n                name: income.name,\r\n                value: income.value,\r\n                userId : parseInt(user)\r\n            })\r\n            .then(() => history.push(`/incomes/detail/${income.id}`))\r\n          }else {\r\n            //POST - add\r\n            addIncome({\r\n                name: income.name,\r\n                value : income.value,\r\n                userId : parseInt(user)\r\n            })\r\n            .then(() => history.push(\"/incomes\"))\r\n          }\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getIncomes().then(() => {\r\n            if (incomeId) {\r\n              getIncomeById(incomeId)\r\n              .then(income => {\r\n                  setIncomes(income)\r\n                  setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n        }, [])\r\n\r\n   \r\n\r\n    return (\r\n        <form className=\"incomeForm\">\r\n        <h2 className=\"incomeForm__title\">{incomeId ? \"Save Income\" : \"Add Income\"}</h2>\r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Income name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Income name\" value={income.name}/>\r\n            </div>\r\n        </fieldset>\r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"value\">Value:</label>\r\n                <input type=\"text\" id=\"value\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Income Value\" value={income.value}/>\r\n            </div>\r\n        </fieldset>\r\n        <button className=\"btn btn-primary\"\r\n        disabled={isLoading}\r\n        onClick={event => {\r\n          event.preventDefault() \r\n          handleClickSaveIncome()\r\n        }}>\r\n      {incomeId ? \"Save Income\" : \"Add Income\"}</button>\r\n      </form>\r\n    )\r\n      }","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\income\\IncomeDetail.js",["127"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { IncomeContext } from \"./IncomeProvider\"\r\nimport \"./Income.css\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport const IncomeDetail = () => {\r\n  const { getIncomeById, deleteIncome } = useContext(IncomeContext)\r\n\r\n\tconst [income, setIncomes] = useState({})\r\n\r\n\tconst {incomeId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  const incomeDelete = () => {\r\n    deleteIncome(income.id)\r\n      .then(() => {\r\n        history.push(\"/incomes\")\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", incomeId)\r\n    getIncomeById(incomeId)\r\n    .then((response) => {\r\n      setIncomes(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"income\">\r\n        <h3 className=\"income__name\">{income.name}</h3>\r\n        <div className=\"income__value\">{income.value}</div>\r\n        <button onClick={() => {\r\n    history.push(`/incomes/edit/${income.id}`)\r\n}}>Edit</button>\r\n        <button onClick={incomeDelete}>Delete Income</button>\r\n    </section>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetDetail.js",["128"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { BudgetContext } from \"./BudgetProvider\"\r\nimport \"./Budget.css\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport const BudgetDetail = () => {\r\n  const { getBudgetById, deleteBudget } = useContext(BudgetContext)\r\n\r\n\tconst [budget, setBudgets] = useState({})\r\n\r\n\tconst {budgetId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  const budgetDelete = () => {\r\n    deleteBudget(budget.id)\r\n      .then(() => {\r\n        history.push(\"/budget\")\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", budgetId)\r\n    getBudgetById(budgetId)\r\n    .then((response) => {\r\n      setBudgets(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"budget\">\r\n        <h3 className=\"budget__name\">{budget.name}</h3>\r\n        <div className=\"budget__date\">{budget.date}</div>\r\n        \r\n        <button onClick={() => {\r\n         history.push(`/budget/edit/${budget.id}`)\r\n          }}>Edit</button>\r\n        \r\n        <button onClick={budgetDelete}>Delete Budget</button>\r\n        \r\n\r\n    </section>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\budget\\BudgetView.js",["129","130","131","132","133","134","135","136"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\auth\\Logout.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryProvider.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\categories\\CategoryCard.js",["137","138"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseCard.js",["139","140"],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseList.js",["141","142","143","144","145"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { ExpenseContext } from \"./ExpenseProvider\"\r\nimport { CategoryContext } from \"../categories/CategoryProvider\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { ExpenseCard } from \"./ExpenseCard\"\r\nimport { BudgetContext } from \"../budget/BudgetProvider\";\r\n\r\nexport const ExpenseList = ({ selectedCategory }) => {\r\n    const { expenses, getExpenses } = useContext(ExpenseContext)\r\n    const { categories, getCategories } = useContext(CategoryContext)\r\n    const { getBudgetById } = useContext(BudgetContext);\r\n\t\r\n\tconst history = useHistory();\r\n  const { budgetId } = useParams();\r\n\r\n  const [budget, setBudget] = useState({});\r\n\r\n  let thing = budget.expenses?.filter(e => e.categoryId == selectedCategory.id)\r\n  console.log(thing)\r\n\r\n\r\n\r\n  \r\n    useEffect(() => {\r\n      getCategories()\r\n        .then(getExpenses)\r\n        .then(() => {\r\n          if (budgetId) {\r\n            getBudgetById(budgetId).then((budget) => {\r\n              setBudget(budget);\r\n            });\r\n          }\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"expense\">\r\n       \r\n       {\r\n        thing?.map(e => {\r\n            return <ExpenseCard key={e.id}  expense={e} category={selectedCategory} budgetParam={budgetId} />\r\n        })\r\n      }\r\n    </section>\r\n  )\r\n}","C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\counter\\Counter.js",[],"C:\\Users\\Tim\\workspace\\pennypinch\\src\\components\\expenses\\ExpenseForm.js",["146"],"import React, { useContext, useEffect, useState } from \"react\"\r\n\r\nimport { ExpenseContext } from \"../expenses/ExpenseProvider\"\r\nimport { CategoryContext } from \"../categories/CategoryProvider\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nexport const ExpenseForm = () => {\r\n    const { addExpense, getExpenseById, updateExpense, getExpenses } = useContext(ExpenseContext)\r\n    const { categories, getCategories } = useContext(CategoryContext)\r\n   \r\n\r\n    const [expense, setExpenses] = useState({\r\n      name: \"\",\r\n      date: \"\",\r\n      categoryId: 0\r\n    });\r\n\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const history = useHistory();\r\n    const { expenseId } = useParams();\r\n    const { budgetId } = useParams();\r\n    \r\n    const handleControlledInputChange = (event) => {\r\n      const newExpense = { ...expense }\r\n      let selectedVal = event.target.value\r\n      if (event.target.id.includes(\"Id\")) {\r\n        selectedVal = parseInt(selectedVal)\r\n      }\r\n     \r\n      newExpense[event.target.id] = selectedVal\r\n      \r\n      setExpenses(newExpense)\r\n    }\r\n\r\n\r\n    const handleClickSaveExpense = () => {\r\n          \r\n      const user = localStorage.getItem(\"Penny_user\")\r\n      \r\n      if (expense.name === \"\" || expense.value === \"\" || expense.categoryId === 0) {\r\n        window.alert(\"Please enter a name and value and choose a category\")\r\n      } else {\r\n\r\n      setIsLoading(true);\r\n         \r\n          if (expenseId){\r\n  \r\n            updateExpense({\r\n                id: expense.id,\r\n                name: expense.name,\r\n                value: parseInt(expense.value),\r\n                categoryId: expense.categoryId,\r\n                budgetId : parseInt(budgetId), \r\n                userId : parseInt(user)\r\n            })\r\n            .then(() => history.push(`/budget/view/${budgetId}`))\r\n          }else {\r\n           \r\n            addExpense({\r\n                name: expense.name,\r\n                value: parseInt(expense.value),\r\n                categoryId: expense.categoryId,\r\n                budgetId: parseInt(budgetId),\r\n                userId : parseInt(user)\r\n                \r\n            })\r\n            .then(() => history.push(`/budget/view/${budgetId}`))\r\n          }\r\n        }\r\n      }\r\n      \r\n    \r\n    useEffect(() => {\r\n        getExpenses().then(getCategories).then(() => {\r\n            if (expenseId) {\r\n              getExpenseById(expenseId)\r\n              .then(expense => {\r\n                  setExpenses(expense)\r\n                  setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n          })\r\n        }, [])\r\n\r\n   \r\n\r\n    return (\r\n        <form className=\"expenseForm\">\r\n        <h2 className=\"expenseForm__title\">{expenseId ? \"Save Expense\" : \"Add Expense\"}</h2>\r\n        \r\n        <fieldset>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Expense name:</label>\r\n                <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Expense name\" value={expense.name}/>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n        <div className=\"form-group\">\r\n                <label htmlFor=\"value\">Value:</label>\r\n                <input type=\"text\" id=\"value\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Expense Value\" value={expense.value}/>\r\n            </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Assign to Category: </label>\r\n          <select value={expense.categoryId} id=\"categoryId\" className=\"form-control\" onChange={handleControlledInputChange}>\r\n            <option value=\"0\">Select a Category</option>\r\n            {categories.map(c => (\r\n              <option key={c.id} value={c.id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n\r\n        <button className=\"btn btn-primary\"\r\n        disabled={isLoading}\r\n        onClick={event => {\r\n          event.preventDefault() \r\n          handleClickSaveExpense()\r\n        }}>\r\n      {expenseId ? \"Save Expense\" : \"Add Expense\"}</button>\r\n      </form>\r\n    )\r\n    }\r\n\r\n\r\n\r\n\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":23},{"ruleId":"151","severity":1,"message":"155","line":9,"column":11,"nodeType":"153","messageId":"154","endLine":9,"endColumn":19},{"ruleId":"151","severity":1,"message":"156","line":9,"column":11,"nodeType":"153","messageId":"154","endLine":9,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":12,"column":6,"nodeType":"159","endLine":12,"endColumn":8,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"161","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":20},{"ruleId":"151","severity":1,"message":"162","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"163","line":80,"column":12,"nodeType":"159","endLine":80,"endColumn":14,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"165","line":17,"column":6,"nodeType":"159","endLine":17,"endColumn":8,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":80,"column":12,"nodeType":"159","endLine":80,"endColumn":14,"suggestions":"168"},{"ruleId":"157","severity":1,"message":"169","line":29,"column":8,"nodeType":"159","endLine":29,"endColumn":10,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"171","line":29,"column":8,"nodeType":"159","endLine":29,"endColumn":10,"suggestions":"172"},{"ruleId":"151","severity":1,"message":"173","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":21},{"ruleId":"151","severity":1,"message":"174","line":8,"column":10,"nodeType":"153","messageId":"154","endLine":8,"endColumn":21},{"ruleId":"151","severity":1,"message":"175","line":15,"column":11,"nodeType":"153","messageId":"154","endLine":15,"endColumn":19},{"ruleId":"151","severity":1,"message":"176","line":16,"column":11,"nodeType":"153","messageId":"154","endLine":16,"endColumn":18},{"ruleId":"151","severity":1,"message":"177","line":16,"column":20,"nodeType":"153","messageId":"154","endLine":16,"endColumn":30},{"ruleId":"157","severity":1,"message":"178","line":49,"column":6,"nodeType":"159","endLine":49,"endColumn":8,"suggestions":"179"},{"ruleId":"151","severity":1,"message":"180","line":62,"column":9,"nodeType":"153","messageId":"154","endLine":62,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":99,"column":28,"nodeType":"183","messageId":"184","endLine":99,"endColumn":30},{"ruleId":"151","severity":1,"message":"185","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":24},{"ruleId":"151","severity":1,"message":"186","line":3,"column":10,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"187","line":1,"column":29,"nodeType":"153","messageId":"154","endLine":1,"endColumn":38},{"ruleId":"151","severity":1,"message":"188","line":1,"column":40,"nodeType":"153","messageId":"154","endLine":1,"endColumn":49},{"ruleId":"151","severity":1,"message":"175","line":9,"column":13,"nodeType":"153","messageId":"154","endLine":9,"endColumn":21},{"ruleId":"151","severity":1,"message":"189","line":10,"column":13,"nodeType":"153","messageId":"154","endLine":10,"endColumn":23},{"ruleId":"151","severity":1,"message":"180","line":13,"column":8,"nodeType":"153","messageId":"154","endLine":13,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":18,"column":57,"nodeType":"183","messageId":"184","endLine":18,"endColumn":59},{"ruleId":"157","severity":1,"message":"190","line":34,"column":8,"nodeType":"159","endLine":34,"endColumn":10,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"192","line":89,"column":12,"nodeType":"159","endLine":89,"endColumn":14,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'password' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBudgets'. Either include it or remove the dependency array.","ArrayExpression",["196"],"'useHistory' is defined but never used.","'Picker' is defined but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', and 'getBudgets'. Either include them or remove the dependency array.",["197"],"React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'getIncomeById', 'getIncomes', and 'incomeId'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'getIncomeById' and 'incomeId'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has missing dependencies: 'budgetId' and 'getBudgetById'. Either include them or remove the dependency array.",["201"],"'ExpenseCard' is defined but never used.","'CounterCard' is defined but never used.","'expenses' is assigned a value but never used.","'budgets' is assigned a value but never used.","'getBudgets' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', 'getCategories', 'getExpenses', and 'getIncomes'. Either include them or remove the dependency array.",["202"],"'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ExpenseContext' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'categories' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'budgetId', 'getBudgetById', 'getCategories', and 'getExpenses'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'expenseId', 'getCategories', 'getExpenseById', and 'getExpenses'. Either include them or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [getBudgets]",{"range":"223","text":"224"},"Update the dependencies array to be: [budgetId, getBudgetById, getBudgets]",{"range":"225","text":"226"},"Update the dependencies array to be: [getIncomes]",{"range":"227","text":"228"},"Update the dependencies array to be: [getIncomeById, getIncomes, incomeId]",{"range":"229","text":"230"},"Update the dependencies array to be: [getIncomeById, incomeId]",{"range":"231","text":"232"},"Update the dependencies array to be: [budgetId, getBudgetById]",{"range":"233","text":"234"},"Update the dependencies array to be: [budgetId, getBudgetById, getCategories, getExpenses, getIncomes]",{"range":"235","text":"236"},"Update the dependencies array to be: [budgetId, getBudgetById, getCategories, getExpenses]",{"range":"237","text":"238"},"Update the dependencies array to be: [expenseId, getCategories, getExpenseById, getExpenses]",{"range":"239","text":"240"},[363,365],"[getBudgets]",[2101,2103],"[budgetId, getBudgetById, getBudgets]",[373,375],"[getIncomes]",[2180,2182],"[getIncomeById, getIncomes, incomeId]",[716,718],"[getIncomeById, incomeId]",[715,717],"[budgetId, getBudgetById]",[1798,1800],"[budgetId, getBudgetById, getCategories, getExpenses, getIncomes]",[1095,1097],"[budgetId, getBudgetById, getCategories, getExpenses]",[2655,2657],"[expenseId, getCategories, getExpenseById, getExpenses]"]